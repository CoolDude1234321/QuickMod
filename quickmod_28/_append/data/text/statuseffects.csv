Name,Displayed As,Symbol,Description,Stacks?,Remove at End Turn?,Remove at Start Turn?,Invisible?,Blocked by Reduce?,Script: When inflicted,Script: On any status infliction,Script: Before Start Turn,Script: On Start Turn,Script: On any equipment use,Script: On any countdown reduce,Script: End Turn,Script: After Combat,Script: On damage inflicted,Script: On damage taken,Script: On status remove
ncr_silence,Silence,silence,Temporarily disables your most important equipment.|Can use two dice to unsilence.,NO,YES,NO,NO,YES,/*as it turns out megaquest ALSO has a custom silence implementation for enemies... i think my 'most important card' thing is a bit nicer though. anyway i need to actually play megaquest some time; the betas i got of it were rather frustrating and unfair but my feedback probably helped*/ if(self.isplayer) { var tw = new motion.actuators.SimpleActuator(null|0.01|null); var s = new elements.Skill(~Against all odds_old~); s.script = ~  removestatus(\~ncr_silence\~|ALL); inflict(SILENCE); ~; tw.onComplete(s.execute|[target|self]); tw.move(); } else { self.symbolparticle(~silence~); },,,runscript(~ncrmod/doncrsilence~|[self]);,,,,,,,
alternate_ncr_silence,Silence?!,silence,Temporarily weakens your most important equipment.|Equipment becomes less powerful.,NO,YES,NO,NO,YES,if(self.isplayer) { var tw = new motion.actuators.SimpleActuator(null|0.01|null); var s = new elements.Skill(~Against all odds_old~); s.script = ~  removestatus(\~ncr_silence\~|ALL); inflict(\~alternate_silence\~); ~; tw.onComplete(s.execute|[target|self]); tw.move(); } else { self.symbolparticle(~silence~); },,,runscript(~ncrmod/doncrsilence~|[self]);,,,,,,,
ncr_dummysilence,Silence,silence,Cannot use special character skills or limit breaks.,NO,YES,NO,NO,YES,,,,,,,,,,,
alternate_ncr_dummysilence,Silence?,silence,Limit break is less powerful.,NO,YES,NO,NO,YES,,,,,,,,,,,
turnaround,Turned_Around,recycle,You are turned around.,NO,YES,YES,YES,NO,runscript(~dummy/turnaround~|[self|false|target]);,,,,,,,,,,
extradamage_singleturn,Extra,sword,Do [sword]<value> extra damage with each attack this turn.,YES,YES,NO,NO,NO,Rules.bonusdamage = status.value;,,,,,,Rules.bonusdamage = 0;,,,,
damocles,Damocles,sword,Damocles tracker status|YELL AT TROBBY! THIS SHOULDNT APPEAR,NO,NO,NO,YES,NO,inflict(~damoclesdamage~); self.setvar(~damoclesAttack~|false); self.setvar(~damoclesReady~|false); trace(~Damocles infliction~);,,,,,,,,,if(!self.getvar(~damoclesReady~)) { var chosenDelay = rand([61|82|103|124|145|166|187|208])/rand([2|3|4|5|6|7]); trace(~Damocles delay is set to ~+chosenDelay); var actuator = new motion.actuators.SimpleActuator(null|chosenDelay|null); var s = new elements.Skill(~Against all odds_old~); s.script = ~sfx(\~_metals\~); self.setvar(\~damoclesAttack\~|true); trace(\~Damocles will attack now\~)~; actuator.onComplete(s.execute|[self|target]); actuator.move(); }; self.setvar(~damoclesReady~|true);,
berserk,Berserk,berserk,All damage you inflict is doubled until the end of the turn.,YES,NO,NO,NO,NO,inflict(~realberserk~);,,,inflict(~realberserk~);,,,var berserk = self.getstatus(~berserk~); berserk.value--; berserk._displayvalue = berserk.value; if(berserk.value <=0) berserk.cleanup = true;,,,,
realberserk,Berserk,berserk,YELL AT TROBBY! THIS SHOULDNT APPEAR,NO,YES,YES,YES,NO,,,status.scriptmodifydamage = ~~;,,,,status.scriptmodifydamage = ~~;,status.scriptmodifydamage = ~~;,,,
damoclesdamage,Damocles,sword,Damocles damage status|YELL AT TROBBY! THIS SHOULDNT APPEAR,NO,YES,YES,YES,NO,status.scriptmodifydamage = ~return (dmg * 2);~;,,,,,,,status.scriptmodifydamage = ~~;,,,
blockall,Block_All,reduce,Take no damage until the end of this turn.,NO,YES,YES,NO,NO,,,,,,,,,,,
myreflection,my reflection,cog,My Reflection internal status|YELL AT TROBBY! THIS SHOULDNT APPEAR,NO,NO,NO,YES,NO,inflict(~myreflectionenemy~);,,,,,,,,self.setvar(~reflectionDamage~|dmg); sfx(~_metals~); for (r in self.getvar(~reflections~)) { r.doequipmentaction(self|target|1|r.assigneddice|0.4); },,
myreflectionenemy,enemy reflection,sword,My Reflection doubles damage|YELL AT TROBBY! THIS SHOULDNT APPEAR,NO,NO,NO,YES,NO,status.scriptmodifydamage = ~return (dmg * 2);~;,,,,,,,status.scriptmodifydamage = ~~;,,,
stun,Stun,stun,Disable a random damage dealing card.,YES,YES,NO,NO,NO,,,,runscript(~reunion/inflictstun~|[self|status.value]);,,,,,,,
password,Password,password,Temporarily disables random equipment. Equipment can|be re-enabled if you have the correct dice.,YES,YES,NO,NO,NO,,,,runscript(~reunion/inflictpassword~|[self|status.value|-1|-1|true]);,,,,,,,
scorch,Scorch,scorch,Increase the burning dice cost. ([fire]1 for each [scorch]Scorch[]).,YES,YES,NO,NO,YES,,,self.setvar(~OldBurnCost~|Rules.burningdicecost); Rules.burningdicecost = self.getvar(~OldBurnCost~) + status.value;,Rules.burningdicecost = self.getvar(~OldBurnCost~) + status.value;,,,Rules.burningdicecost = self.getvar(~OldBurnCost~);,Rules.burningdicecost = self.getvar(~OldBurnCost~);,,,
helium,Helium,helium,Your dice are... floaty!,NO,YES,NO,NO,NO,if(self.isplayer && !self.varexists(~dicegrav_trigger~)){ var s = new elements.Skill(~Weak Helium~); var tw = new motion.actuators.SimpleActuator(null|0.05|null); tw._repeat = -1; tw.onRepeat(s.execute|[self|target]); self.setvar(~dicegrav_trigger~|tw); tw.move(); };,,,,,,,,,,if(self.varexists(~dicegrav_trigger~)){ self.getvar(~dicegrav_trigger~).stop(); self.resetvar(~dicegrav_trigger~); };
confusion_battle,Very_Confused,confuse,Equipment is mixed-up and obscured this battle.,NO,NO,NO,NO,NO,,,inflictself(CONFUSE);,,,,,,,,
dizzy,Dizzy,stun,Your dice are... shaking it! Boogie[;] oh yeah!,NO,YES,NO,NO,YES,if(self.isplayer && !self.varexists(~diceshake_trigger~)){ var s = new elements.Skill(~Dizzy Script~); var tw = new motion.actuators.SimpleActuator(null|0.05|null); tw._repeat = -1; tw.onRepeat(s.execute|[self|target]); self.setvar(~diceshake_trigger~|tw); tw.move(); };,,,,,,,,,,if(self.varexists(~diceshake_trigger~)){ self.getvar(~diceshake_trigger~).stop(); self.resetvar(~diceshake_trigger~); };
fade,Fade,vanish,Duplicate dice are immediately destroyed. Disappears when triggered.,YES,YES,NO,NO,YES,,,,,,,,,,,
anger,Anger,jinx,Counter reduces by one on each turn.|If it reaches zero[;] gain [fury]Fury[].,YES,NO,NO,NO,NO,/* todo status icon */,,status.value--; status._displayvalue--; if(status.value <= 0){ self.removestatus(~anger~); inflictself(FURY); sfx(~_fury~|~~|0.2); },,,,,,,,
rollitems,rollitems,dice,Internal innate witch status|YELL AT TROBBY! THIS SHOULDNT APPEAR,NO,NO,NO,YES,NO,status.scriptonrolldice = ~for (di in actualdice) {var d = di.basevalue; runscript('keymastersreunion/keymaster/addfromspellbook'|[self|d]);}~;,,,,,,,,,,
robotize,Robotized,vanish,You are the Robot now.,NO,YES,NO,NO,YES,runscript(~reunion/transform~|[self|~Robot_Curse~|false]);,,var oldname = self.getskillcard().name; self.setvar(~oldskillcard~|oldname); self.equipment.remove(self.getskillcard()); var youchooseyoulose = self.createskillcard(~Robot Calculate~| []); self.equipment.push(youchooseyoulose); youchooseyoulose.temporary_thisturnonly = true; youchooseyoulose.x = -9999;,self.addstatus(~revert~|1);,,,var youchooseyoulose = self.createskillcard(self.getvar(~oldskillcard~)| []); youchooseyoulose.x = -9999; self.equipment.push(youchooseyoulose); self.resetvar(~oldskillcard~);,,,,
revert,Revert,jinx,Internal control for reverting back to original character at the end of a turn after a transform. Should not appear.,NO,YES,YES,YES,NO,,,,,,,runscript(~reunion/revert~|[self|self.getvar(~revert~)]);,,,,
cornelischarm,Cornelis Charm,dice,Roll an extra every turn,NO,YES,NO,NO,NO,,,,self.extradice++;,,,,,,,
landmine,Landmine,fire,Deal 3 damage[;] unless a Landmine is used,YES,YES,NO,YES,NO,,,,attackself(3*status.value); sfxdamage(self|3);,,,,,,,
landmineplus,LandminePlus,fire,Deal 5 damage[;] unless a Landmine is used,YES,YES,NO,YES,NO,,,,attackself(5*status.value); sfxdamage(self|5);,,,,,,,
quickmod_error,AAnullF?GKé²?0,ncr_error,KSDJD[;]dfhe[key]Oh no! What a bad roll! RobG?RM³R(GtcDicey Dungeons.exeFe|Dice: 0 (length 0)YELL AT|[poison]LADY LUCK! THIS SHOULDNT APPEAR|OpenGL[sword]J1O[;]steamappsg&Sorry [fire]modders!|è.5[;]ÿÿÿÿÿÿÿÿÿÿÿ,YES,YES,NO,NO,YES,,,for(i in 0...(status.value)) {runscript(~quickmod/errorstatus~|[self|target]);},,,,,,,,
reversenexttarget,Swap_Next_Target,recycle,The next equipment you use will swap target.,YES,YES,NO,NO,NO,,,,,,,,,,,
one,,one,1,YES,YES,NO,NO,YES,,,,runscript(~dummy/inflict1~|[self|status.value|-1|-1|true]);,,,,,,,
cantrips_eyes,Cantrips,thorns,Cantrips controller for Cantrips item. (should not appear),NO,YES,NO,YES,NO,status.scriptonrolldice = ~runscript(\~reunion/cantrips\~|[self|target|actualdice|\~Cantrip Eyes\~|[1]]);~;,,,,,,,,,,
cantrips_eyes+,Cantrips,thorns,Cantrips controller for Cantrips item. (should not appear),NO,YES,NO,YES,NO,status.scriptonrolldice = ~runscript(\~reunion/cantrips\~|[self|target|actualdice|\~Cantrip Eyes\~|[1|2]]);~;,,,,,,,,,,
aaa,AAA,caw,When you use any equipment[;] inflict [ice]Freeze to yourself.|(Reduced by 1 each time it triggers.),YES,YES,NO,NO,YES,if(!self.hasstatus(~applyhauntlike~)) self.addstatus(~applyhauntlike~|1);,,,,,,,,,,
bbb,BBB,caw,When you use any equipment[;] inflict [fire]Burn to yourself.|(Reduced by 1 each time it triggers.),YES,YES,NO,NO,YES,if(!self.hasstatus(~applyhauntlike~)) self.addstatus(~applyhauntlike~|1);,,,,,,,,,,
applyhauntlike,applyhauntlike,caw,When you use any equipment[;] apply some haunt-like status you have,YES,YES,NO,YES,YES,,,,,var applylist = [];/*feel free to add sting and caw if you're going to use them*/ for(i in [~aaa~|~bbb~]) if(self.hasstatus(i)) applylist.push(i);if(applylist.length > 0){var rand = rand(applylist);if(rand == ~caw~){inflictself(WEAKEN); self.applyequipmentcurses(); var caw = self.getstatus(~caw~); caw.value--; caw._displayvalue = caw.value; caw.updatedescription(); if(caw.value <= 0){ self.removestatus(~caw~); } self.removestatus(~weaken~);} else if(rand == ~sting~){inflictself(SHOCK); self.applyequipmentcurses(); var sting = self.getstatus(~sting~); sting.value--; sting._displayvalue = sting.value; sting.updatedescription(); if(sting.value <= 0){ self.removestatus(~sting~); } if(Rules.hasalternate(SHOCK)){ self.removestatus(~alternate_shock~); } else{ self.removestatus(~shock~); }} else if(rand == ~aaa~){var highestvalue = 0; if (self.dicepool.length > 0) { for (mydice in self.dicepool) { if (mydice.available() && mydice.basevalue > highestvalue && !mydice.burn && !mydice.intween()) { highestvalue = mydice.basevalue; } } } if(highestvalue > 0) { for (mydice in self.dicepool) { if (mydice.basevalue == highestvalue && mydice.available() && !mydice.intween() && !mydice.burn) { mydice.animate(ICE); break; } } } self.symbolparticle(ICE); var aaa = self.getstatus(~aaa~); aaa.value--; aaa._displayvalue = aaa.value; aaa.updatedescription(); if(aaa.value <= 0){ self.removestatus(~aaa~); }} else if(rand == ~bbb~){var possibledice = []; if (self.dicepool.length > 0) { for (mydice in self.dicepool) { if (mydice.available() && !mydice.burn && !mydice.intween()) { possibledice.push(mydice); } } } if(possibledice.length > 0) {var randdice = rand(possibledice);randdice.animate(FIRE);self.symbolparticle(FIRE); var bbb = self.getstatus(~bbb~); bbb.value--; bbb._displayvalue = bbb.value; bbb.updatedescription(); if(bbb.value <= 0){ self.removestatus(~bbb~); }}},,,,,,
hallofpoison,Hall_Of_Poison,toxic,Get 1 poison every turn.,YES,NO,NO,NO,YES,,,,inflictself(POISON|status.value); sfx(~_poison~);,,,,,,,
moxred,Red_Mox,moxred,Burning with fire and anger[;]|red mox demands blood to keep working.,NO,NO,NO,NO,NO,,,,,self.setvar(~moxredremove~|true); var tw = new motion.actuators.SimpleActuator(null|0.02|null); var s = new elements.Skill(~Against all odds_old~); s.script = ~if(self.getvar('moxredremove') && (!self.getvar('moxredgain'))) {removestatusself('moxred'|1); self.textparticle('Red mox has faded!');} self.setvar('moxredgain'|false);~; tw.onComplete(s.execute|[self|target]); tw.move();,,,,var tw = new motion.actuators.SimpleActuator(null|0.01|null); var s = new elements.Skill(~Against all odds_old~); s.script = ~self.setvar('moxredremove'|false);~; tw.onComplete(s.execute|[self|target]); tw.move();,,// MOX LOSE SOUND
moxgreen,Green_Mox,moxgreen,Fragile and unstable[;]|green mox is easily gained but just as easily lost.,NO,NO,NO,NO,NO,// MOX GAIN SOUND HERE,,,,,,,,,,// MOX LOSE SOUND
moxblue,Blue_Mox,moxblue,A shy kind of magic energy[;]|delicately charged using a Totem.,NO,NO,NO,NO,NO,// MOX GAIN SOUND HERE,,,,,,,,,,// MOX LOSE SOUND
totemcontrol,Totem Control,cog,Controller for totem items,NO,NO,NO,YES,NO,status.scriptonrolldice = ~var hand = [Deck.getcard(0)|Deck.getcard(1)|Deck.getcard(2)]; var top = hand.indexOf(null); if (top == -1) {top = 3;} hand.resize(top);  var draw = Deck.getcards('draw'); if(top < 3) {/*fill in the nulls if possible*/ for(i in 0...(3-top)) {hand.push(draw.pop());}}  trace(hand);    if(hand.length > 0) {var active = getstatusself('moxall')==1; for (card in hand) {if(card != null) {if(card.equipment != null) {if (card.equipment.ready && card.equipment.hastag('totemblue')) {active = true; break;}}}} if(active) {inflictself('moxblue');} else {removestatusself('moxblue'|1);}}~,,Deck.snapstyle = ~dice~;,,var hand = [Deck.getcard(0)|Deck.getcard(1)|Deck.getcard(2)]; var top = hand.indexOf(null); if (top == -1) {top = 3;} hand.resize(top);  var draw = Deck.getcards('draw'); if(top < 3) {/*fill in the nulls if possible*/ for(i in 0...(3-top)) {hand.push(draw.pop());}}  trace(hand);    if(hand.length > 0) {var active = getstatusself('moxall')==1; for (card in hand) {if(card != null) {if(card.equipment != null) {if (card.equipment.ready && card.equipment.hastag('totemblue')) {active = true; break;}}}} if(active) {inflictself('moxblue');} else {removestatusself('moxblue'|1);}},,var hand = [Deck.getcard(0)|Deck.getcard(1)|Deck.getcard(2)]; var top = hand.indexOf(null); if (top == -1) {top = 3;} hand.resize(top);  var draw = Deck.getcards('draw'); if(top < 3) {/*fill in the nulls if possible*/ for(i in 0...(3-top)) {hand.push(draw.pop());}}  trace(hand);    if(hand.length > 0) {var active = getstatusself('moxall')==1; for (card in hand) {if(card != null) {if(card.equipment != null) {if (card.equipment.ready && card.equipment.hastag('totemblue')) {active = true; break;}}}} if(active) {inflictself('moxblue');} else {removestatusself('moxblue'|1);}},,,,
moxall,Dark_Mox,moxall,The great and magnificent Dark Mox|provides all 3 Mox in stable form.,NO,YES,NO,NO,NO,inflictself(~moxred~); inflictself(~moxgreen~); inflictself(~moxblue~); status.scriptonrolldice = ~inflictself('moxred'); inflictself('moxgreen'); inflictself('moxblue'); ~,inflictself(~moxred~); inflictself(~moxgreen~); inflictself(~moxblue~); ,,,inflictself(~moxred~); inflictself(~moxgreen~); inflictself(~moxblue~); ,,,,inflictself(~moxred~); inflictself(~moxgreen~); inflictself(~moxblue~); ,,
lockedgoldself,My_Dice_Pelts,gold,Locked dice will be sold to you for [gold]1.,NO,YES,NO,NO,NO,status.scriptonrolldice = ~for (mydice in actualdice) {if (mydice.locked) {mydice.animate('disappear'); self.gold++; inflict('nothing'); trace('Sold! '+self.gold+' / '+target.gold);}}~,,,,,,,,,,
lockedgoldtarget,Dice_Pelts,gold,Locked dice will be sold to enemy for [gold]1.,NO,YES,NO,NO,NO,status.scriptonrolldice = ~for (mydice in actualdice) {if (mydice.locked) {mydice.animate('disappear'); target.gold++; inflict('nothing'); trace('Sold! '+self.gold+' / '+target.gold);}}~,,,,,,,,,,
reunionshowgold,Gold,gold,Can be exchanged for goods and services.,YES,NO,NO,NO,NO,if(status._displayvalue != self.gold) { status._displayvalue = self.gold; status.updatedescription(); },if(status._displayvalue != self.gold) { status._displayvalue = self.gold; status.updatedescription(); },if(status._displayvalue != self.gold) { status._displayvalue = self.gold; status.updatedescription(); },if(status._displayvalue != self.gold) { status._displayvalue = self.gold; status.updatedescription(); },if(status._displayvalue != self.gold) { status._displayvalue = self.gold; status.updatedescription(); },if(status._displayvalue != self.gold) { status._displayvalue = self.gold; status.updatedescription(); },if(status._displayvalue != self.gold) { status._displayvalue = self.gold; status.updatedescription(); },if(status._displayvalue != self.gold) { status._displayvalue = self.gold; status.updatedescription(); },if(status._displayvalue != self.gold) { status._displayvalue = self.gold; status.updatedescription(); },"if(status._displayvalue != self.gold) { status._displayvalue = self.gold; status.updatedescription(); }	",
nothing,nothing,mana,YELL AT TROBBY! THIS SHOULDNT APPEAR,YES,YES,YES,YES,NO,,,,,,,,,,,
corpsemaggotshandler,corpsemaggots,cog,Handler for corpse maggots. YELL AT TROBBY! THIS SHOULDNT APPEAR,NO,NO,NO,YES,NO,,,,,var usedslots = e.getslots(); for (i in self.equipment) {if(i.hastag(~corpsemaggots~) && i.ready) {i.changeslots(usedslots); i.assigneddice = e.assigneddice; i.doequipmentaction(self|target|1|i.assigneddice|0.1);}},,,,,,
altweaken,Alternate_Weaken,weaken,"Instead of weakening equipment,|take one more [sword]<value> extra damage.",NO,NO,NO,NO,NO,,,Rules.setalternate(WEAKEN);,,,,Rules.clearalternate(WEAKEN);,Rules.clearalternate(WEAKEN);,,,
