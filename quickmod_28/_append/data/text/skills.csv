Name,Description,Script
Helium Script,(should not appear),if(!self.isplayer){ target.getvar(~dicegrav_trigger~).stop(); target.resetvar(~dicegrav_trigger~); }else if(target.hp == 0){ self.getvar(~dicegrav_trigger~).stop(); self.resetvar(~dicegrav_trigger~); }; if(getstatusself(~helium~) == 0){ if(self.varexists(~dicegrav_trigger~)){ self.getvar(~dicegrav_trigger~).stop(); self.resetvar(~dicegrav_trigger~); }; }else{ var flag = false; for(mydice in self.dicepool){ if(mydice.available()){ flag = true; mydice.kick(-90[;]5+3*getstatusself(~helium~)); if(mydice.y < 50){ mydice.animate(~disappear~); }; }; }; };
Weak Helium,(should not appear),if(!self.isplayer){ target.getvar(~dicegrav_trigger~).stop(); target.resetvar(~dicegrav_trigger~); }else if(target.hp == 0){ self.getvar(~dicegrav_trigger~).stop(); self.resetvar(~dicegrav_trigger~); }; else{ var flag = false; for(mydice in self.dicepool){ if(mydice.available()){ flag = true; mydice.kick(-90[;]5+3*getstatusself(~helium~)); if(mydice.y < 50){ mydice.animate(~disappear~); }; }; }; };
Dizzy Script,(should not appear),if(!self.isplayer){ target.getvar(~diceshake_trigger~).stop(); target.resetvar(~diceshake_trigger~); }else if(target.hp == 0){ self.getvar(~diceshake_trigger~).stop(); self.resetvar(~diceshake_trigger~); }; else{ var flag = false; for(mydice in self.dicepool){ if(mydice.available()){ flag = true; mydice.kick(pick([10[;]20[;]30[;]40[;]50[;]60[;]70[;]80[;]90[;]100[;]110[;]120[;]130[;]140[;]150[;]160[;]170[;]180[;]190[;]210[;]220[;]230[;]240[;]250[;]260[;]270[;]280[;]290[;]300[;]310[;]320[;]330[;]340[;]350])[;]pick([3[;]3[;]5[;]5[;]5[;]8[;]8[;]10[;]13])); if(mydice.y < 20 # mydice.y > 2230 # mydice.x > 3100 # mydice.x < 10){ mydice.animate(~disappear~); trace(~X ~+mydice.x+~; Y ~+mydice.y); }; }; }; };
Gluestick,Lock [lock]1 dice,inflict(LOCK); sfx(~_lock~);
Cheat Engine,0xAllDice = 6;,if(self != null) { if(self.dicepool != null){ if(self.dicepool.length > 0) { for (mydice in self.dicepool){ mydice.basevalue = 6; } } } }
Cargo Lift,Roll 1[;] 2[;] 3[;] 4[;] 5[;] 6 (once),givedice([1[;]2[;]3[;]4[;]5[;]6]); if(!self.isplayer) var self = target; Gadget.changegadget(self[;] ~Cargo Lift~[;] ~Broken Gadget~);
Reinforcements,If out of dice[;] roll 2 dice,var diceavailable = false; for(dice in self.dicepool) { if(dice.available()) { diceavailable = true; break; } } for(eq in self.equipment) { if(eq.isready() && eq.assigneddice.length > 0) { for(dice in eq.assigneddice) { if(dice != null && dice.available()) { diceavailable = true; break; } } } } if(!diceavailable) { givedice([rand([1[;]2[;]3[;]4[;]5[;]6])[;]rand([1[;]2[;]3[;]4[;]5[;]6])]); } else { self.textparticle(~No effect!~); }
Parity Flip,Bump odds[;] nudge evens,var c = 0; if(self.dicepool.length > 0) { sfx(~diceroll~); for (mydice in self.dicepool){ if (mydice.available() && mydice.basevalue % 2 == 0){ mydice.animatereroll((mydice.basevalue - 1)[;] self.screenposition()[;] c * 0.05); c++; } if (mydice.available() && mydice.basevalue % 2 == 1){ mydice.animatereroll((mydice.basevalue + 1)[;] self.screenposition()[;] c * 0.05); c++; } } }
Improvise,Get a temporary item,giveequipment(rand(getequipmentlist(null[;][][;][~skillcard~[;]~excludefromrandomlists~[;]~robotonly~[;]~witchonly~[;]~onceperbattle~[;]~alternateversion~])));
Omegaflip,Flip dice under 4,var c = 0; for (mydice in self.dicepool){ if (mydice.available() && mydice.basevalue < 4){ mydice.animatereroll((7 - mydice.basevalue)[;] self.screenposition()[;] c * 0.05); c++; } } sfx(~useitem~);
lolsorandom,Reroll an active item,if(self.equipment.length > 0 && self.layout != ~DECK~) { var eqlist = []; for(eq in self.equipment) { if(eq.skillcard == ~~ && eq.isready(true) && !eq.temporary_thisturnonly && eq.onscreen() && !eq.hastag(~skillcard~)) { eqlist.push(eq); } }   if(eqlist.length > 0) { var choseneq = rand(eqlist); var smallorlarge = ~small~; if(choseneq.size > 1) { smallorlarge = ~large~; }     var exceptions = runscript(~ncrmod/getexceptions~[;][self]); var neweq = new elements.Equipment(rand(getequipmentlist(null[;][smallorlarge][;]exceptions))); runscript(~ncrmod/replaceequipment~[;][self[;]neweq[;]choseneq]); runscript(~ncrmod/evalstarthooks~[;][self[;]target[;]neweq]); neweq.animate(~flashandshake~); sfx(~upgradeequipment~); } else { self.textparticle(~No effect!~); } } else { self.textparticle(~No effect!~); }
Rollout,Reroll a random amount,var dicelist = []; for(mydice in self.dicepool) { if(mydice.available()) { dicelist.push(mydice); } } var numlist = []; if(dicelist.length > 0) { sfx(~diceroll~); dicelist = shuffle(dicelist); numlist = [0]; for(i in 0...dicelist.length) { numlist.push(numlist[numlist.length - 1] + 1); } numlist.shift(); var r = rand(numlist); for(i in 0...r) { dicelist[i].animatereroll(rand([1[;]2[;]3[;]4[;]5[;]6])[;] self.screenposition()); } }
Drunken Boxing,Do [sword]1-10 damage,var r = rand([1[;]2[;]2[;]3[;]3[;]3[;]4[;]4[;]4[;]4[;]5[;]5[;]5[;]5[;]5[;]6[;]6[;]6[;]6[;]6[;]7[;]7[;]7[;]7[;]8[;]8[;]8[;]9[;]9[;]10]); attack(r); sfxdamage(target[;]r);
Proximity Mine,Reroll dice nearest to this,if(!self.isplayer) { self.textparticle(~No effect!~); } else { var proximy = self.getskillcard().y + (self.getskillcard().height / 2) - 132; var proximx = self.getskillcard().x + (self.getskillcard().width / 2) - 110; var dicelist = []; for(mydice in self.dicepool) { if(mydice.available()) { dicelist.push(mydice); } } if(dicelist.length != 0) { var proxlist = []; for(mydice in dicelist) { proxlist.push(((mydice.x - proximx) * (mydice.x - proximx)) + ((mydice.y - proximy) * (mydice.y - proximy))); if(proxlist[proxlist.length - 1] < 0) { proxlist[proxlist.length - 1] = proxlist[proxlist.length - 1] * -1; } } var min = [0[;]999999999999999999999]; for(prox in proxlist) { trace(prox); trace(min[1]); trace(~---~); if(prox < min[1]) { min[1] = prox; min[0] = proxlist.indexOf(prox); } } sfx(~diceroll~); dicelist[min[0]].animatereroll(rand([1[;]2[;]3[;]4[;]5[;]6])[;] self.screenposition()); } else { self.textparticle(~No dice!~); } }
Confiscate,Lock [lock]1 dice,inflict(LOCK); sfx(~_lock~); /* think of this as like dramatic pause vs cackle */
Feed the Plant,(Take [sword]999 dmg if scrapped),/*feedme*/
Delude,Inflict [vanish]1 fade,inflict(~fade~); sfx(~_vanish~);
Mass Deception,Inflict [vanish]Vanish,inflict(VANISH); sfx(~_vanish~);
Rose Needle,Gain [thorns]4 thorns,inflictself(THORNS[;]4); sfx(~_shield~); /* copied from reunion reboot */
Recovery,Recover [heal]6 health,attackself(-6); sfx(~_heal~); /* just in case */
Optimise,The next two items have +1 use this turn,inflictself(REEQUIPNEXT[;]2); sfx(~_recycle~); /* nerfed reunion optimise. copied directly from reunionreboot */
Change rewards[][],[gray](2 uses this turn),resetjackpot(self); self.roll_jackpotbonus += 1; var availablerewards = shuffle(self.getvar(~altaltaltrewards~)); Rules.jackpotskills = [~Change Rewards[]~[;]availablerewards[0][;]availablerewards[1]];
Change rewards[],[gray](One use this turn),resetjackpot(self); self.roll_jackpotbonus += 1; var availablerewards = shuffle(self.getvar(~altaltaltrewards~)); Rules.jackpotskills = [~Change Rewards~[;]availablerewards[0][;]availablerewards[1]]; var skill = new motion.actuators.SimpleActuator(null[;] 0.52[;] null); var script = new elements.DiceyScript(~self.getskillcard().skillsavailable[2] = false;~); script.set(~target~[;] target); script.set(~self~[;] self); skill._repeat = 1; script.set(~trace~[;]trace); skill.onRepeat(script.execute[;] []); skill.move();
Change rewards,[gray](No more uses this turn),self.roll_jackpotbonus += 1;
Robobotize,Transform into Robobot,runscript(~reunion/transform~[;][self[;]~Robobot_Old~[;]false]);
Next Page,Get older skills[;] -[heart]1,/*nextpage*/
Replace Me,Replace Me!,self.textparticle(~What the fuck~);
Empty Slot,,self.textparticle(~How~);
Broked Gadgit,No effect (pls add gadget),sfx(~_whoosh~);
The Sacrifice,Wow! Gain [heal]2 max HP.,self.maxhp += 2; attackself(-2); sfx(~_survive~);
Cargo Lift,Roll 1[;] 2[;] 3[;] 4[;] 5[;] 6 (once),givedice([1|2|3|4|5|6]); if(!self.isplayer) var self = target; Gadget.changegadget(self| ~Cargo Lift~| ~Broken Gadget~);
Vaporizer,Do [sword]5 damage,attack(5); sfxdamage(target|5);
Health Pack,Heal [heal]16 (once),attackself(-16); sfx(~_heal~); if(!self.isplayer) var self = target; Gadget.changegadget(self| ~Health Pack~| ~Broken Gadget~);
Author[comma]Comment,???,inflict(~quickmod_error~);
No[comma] you,Swap the next target,inflictself(~reversenexttarget~|1);
Needles,Gain [thorns]2 thorns,inflictself(THORNS|2); sfx(~_thorns~);
Oh Shit!,Take [sword]1 damage,attackself(1); sfxdamage(self|1);
Onyx Crystal,Gain all Mox.,inflictself(~moxall~);
